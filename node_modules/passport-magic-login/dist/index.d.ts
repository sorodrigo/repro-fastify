import { Request, Response } from 'express';
import { StrategyCreatedStatic } from 'passport';
declare type VerifyCallback = (payload: any, verifyCallback: (err?: Error, user?: Object, info?: any) => void) => void;
interface Options {
    secret: string;
    callbackUrl: string;
    sendMagicLink: (destination: string, href: string, verificationCode: string, req: Request) => Promise<void>;
    verify: VerifyCallback;
    /** @deprecated */
    confirmUrl?: string;
}
declare class MagicLoginStrategy {
    private _options;
    name: string;
    constructor(_options: Options);
    authenticate(this: StrategyCreatedStatic & MagicLoginStrategy, req: Request): void;
    send: (req: Request, res: Response) => void;
    /** @deprecated */
    confirm: (req: Request, res: Response) => void;
}
export default MagicLoginStrategy;
