{"version":3,"file":"passport-magic-login.cjs.production.min.js","sources":["../src/token.ts","../src/index.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\ntype JwtPayload = {\n  destination: string;\n  code: string;\n  [key: string]: any;\n};\n\nexport const decodeToken = (secret: string, token?: string) => {\n  if (typeof token !== 'string') {\n    return false;\n  }\n  try {\n    return jwt.verify(token, secret) as JwtPayload;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const generateToken = (secret: string, payload: JwtPayload) =>\n  jwt.sign(payload, secret, {\n    expiresIn: '60min',\n  });\n","import { Request, Response } from 'express';\nimport { StrategyCreatedStatic } from 'passport';\nimport { generateToken, decodeToken } from './token';\n\ntype VerifyCallback = (\n  payload: any,\n  verifyCallback: (err?: Error, user?: Object, info?: any) => void\n) => void;\n\ninterface Options {\n  secret: string;\n  callbackUrl: string;\n  sendMagicLink: (\n    destination: string,\n    href: string,\n    verificationCode: string,\n    req: Request\n  ) => Promise<void>;\n  verify: VerifyCallback;\n\n  /** @deprecated */\n  confirmUrl?: string;\n}\n\nclass MagicLoginStrategy {\n  name: string = 'magiclogin';\n\n  constructor(private _options: Options) {}\n\n  authenticate(\n    this: StrategyCreatedStatic & MagicLoginStrategy,\n    req: Request\n  ): void {\n    const self = this;\n    const payload = decodeToken(\n      self._options.secret,\n      req.query.token as string\n    );\n\n    const verifyCallback = function(err?: Error, user?: Object, info?: any) {\n      if (err) {\n        return self.error(err);\n      } else if (!user) {\n        return self.fail(info);\n      } else {\n        return self.success(user, info);\n      }\n    };\n\n    self._options.verify(payload, verifyCallback);\n  }\n\n  send = (req: Request, res: Response): void => {\n    if (!req.body.destination) {\n      res.status(400).send('Please specify the destination.');\n      return;\n    }\n\n    const code = Math.floor(Math.random() * 90000) + 10000 + '';\n    const jwt = generateToken(this._options.secret, {\n      ...req.body,\n      code,\n    });\n\n    this._options\n      .sendMagicLink(\n        req.body.destination,\n        `${this._options.callbackUrl}?token=${jwt}`,\n        code,\n        req\n      )\n      .then(() => {\n        res.json({ success: true, code });\n      })\n      .catch((error: any) => {\n        console.error(error);\n        res.json({ success: false, error });\n      });\n  };\n\n  /** @deprecated */\n  confirm = (req: Request, res: Response): void => {\n    console.warn(\n      `magicLink.confirm was removed in v1.0.7, it is no longer necessary.`\n    );\n    res.redirect(`${this._options.callbackUrl}?token=${req.query.token}`);\n  };\n}\n\nexport default MagicLoginStrategy;\n"],"names":["generateToken","secret","payload","jwt","sign","expiresIn","_options","req","res","body","destination","code","Math","floor","random","_this","sendMagicLink","callbackUrl","then","json","success","error","console","status","send","warn","redirect","query","token","authenticate","self","this","verify","err","decodeToken","user","info","fail"],"mappings":"sWAQO,IAWMA,EAAgB,SAACC,EAAgBC,UAC5CC,EAAIC,KAAKF,EAASD,EAAQ,CACxBI,UAAW,iDCMOC,4BAAAA,YAFL,uBA2BR,SAACC,EAAcC,MACfD,EAAIE,KAAKC,iBAKRC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,IAAQ,GACnDX,EAAMH,EAAce,EAAKT,SAASL,YACnCM,EAAIE,MACPE,KAAAA,KAGFI,EAAKT,SACFU,cACCT,EAAIE,KAAKC,YACNK,EAAKT,SAASW,sBAAqBd,EACtCQ,EACAJ,GAEDW,MAAK,WACJV,EAAIW,KAAK,CAAEC,SAAS,EAAMT,KAAAA,cAErB,SAACU,GACNC,QAAQD,MAAMA,GACdb,EAAIW,KAAK,CAAEC,SAAS,EAAOC,MAAAA,YAtB7Bb,EAAIe,OAAO,KAAKC,KAAK,iDA2Bf,SAACjB,EAAcC,GACvBc,QAAQG,4EAGRjB,EAAIkB,SAAYX,EAAKT,SAASW,sBAAqBV,EAAIoB,MAAMC,2BAxD/DC,aAAA,SAEEtB,OAEMuB,EAAOC,KACP7B,ED1BiB,SAACD,EAAgB2B,MACrB,iBAAVA,SACF,aAGAzB,EAAI6B,OAAOJ,EAAO3B,GACzB,MAAOgC,UACA,GCmBSC,CACdJ,EAAKxB,SAASL,OACdM,EAAIoB,MAAMC,OAaZE,EAAKxB,SAAS0B,OAAO9B,GAVE,SAAS+B,EAAaE,EAAeC,UACtDH,EACKH,EAAKT,MAAMY,GACRE,EAGHL,EAAKV,QAAQe,EAAMC,GAFnBN,EAAKO,KAAKD"}